{
	"info": {
		"_postman_id": "e2b43f10-9178-4c21-aa6e-56f472cdf936",
		"name": "User Authentication API",
		"description": "This collection contains API endpoints for user authentication and authorization implemented using Node.js, Express.js, Mongoose, and JSON Web Tokens (JWT). It allows users to register, log in, and retrieve their profile information securely. Each endpoint is documented with the required request formats, expected responses, and error handling details to facilitate seamless integration and testing.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38832144"
	},
	"item": [
		{
			"name": "New Request",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"shivani\",\r\n  \"email\": \"shiv@example.com\",\r\n  \"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/auth/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"auth",
						"register"
					]
				},
				"description": "**User Registration:** Allows new users to create an account by providing a username, email, and password. Passwords are securely hashed before storage."
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/api/auth/login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"shiv@example.com\",\r\n    \"password\": \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"auth",
						"login"
					]
				},
				"description": "**User Login:** Authenticates existing users using their email and password, generating a JWT for further authenticated requests."
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/api/user/me",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NzA2NGUxOWE2MTYyZTA1MTNmZDM2ODciLCJpYXQiOjE3Mjg0NjY5NDIsImV4cCI6MTcyODQ3MDU0Mn0.bEbW1VAYZgqUs4P2pxXegxSalaoKPnBWx8-Yjq4KjlU",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/user/me",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"user",
						"me"
					]
				},
				"description": "**Retrieve User Info:** Protected route that returns the authenticated user's information using the provided JWT."
			},
			"response": []
		}
	]
}